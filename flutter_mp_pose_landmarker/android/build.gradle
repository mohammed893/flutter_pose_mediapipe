group = "com.example.flutter_mp_pose_landmarker"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.example.flutter_mp_pose_landmarker"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 24
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
        implementation 'androidx.camera:camera-core:1.2.3'
        implementation 'androidx.camera:camera-camera2:1.2.3'
        implementation 'androidx.camera:camera-lifecycle:1.2.3'
        implementation 'androidx.camera:camera-view:1.2.3'
        implementation "androidx.camera:camera-extensions:1.3.2"
        implementation 'com.google.android.material:material:1.10.0' // or latest stable
        implementation 'com.google.mediapipe:tasks-vision:0.10.2' // Or your used version
        def nav_version = "2.7.7"
        implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
        implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
        implementation 'org.tensorflow:tensorflow-lite:2.11.0' // If used
        implementation 'org.tensorflow:tensorflow-lite-gpu:2.11.0' // If used
        implementation 'com.google.code.gson:gson:2.10.1'
        // Kotlin standard library if needed
        implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.0"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
